<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="com.clj.reptilehouse.system.dao.SysMenuDao" >
  <resultMap id="BaseResultMap" type="com.clj.reptilehouse.system.entity.SysMenu" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="BIGINT" />
    <result column="tree_code" property="treeCode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="created_time" property="createdTime" jdbcType="BIGINT" />
    <result column="modified_time" property="modifiedTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, `name`, url, parent_id, tree_code, `status`, icon, remark, created_time, modified_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_menu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.clj.reptilehouse.system.entity.SysMenu" >
    insert into sys_menu (id, `name`, url, 
      parent_id, tree_code, `status`, 
      icon, remark, created_time, 
      modified_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=BIGINT}, #{treeCode,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, 
      #{icon,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createdTime,jdbcType=BIGINT}, 
      #{modifiedTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.clj.reptilehouse.system.entity.SysMenu" >
    insert into sys_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      `name`,
      url,
      parent_id,
      tree_code,
      `status`,
      icon,
      remark,
      created_time,
      modified_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      #{name,jdbcType=VARCHAR},
      #{url,jdbcType=VARCHAR},
      #{parentId,jdbcType=BIGINT},
      #{treeCode,jdbcType=VARCHAR},
      #{status,jdbcType=BIT},
      #{icon,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR},
      #{createdTime,jdbcType=BIGINT},
      #{modifiedTime,jdbcType=BIGINT},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.clj.reptilehouse.system.entity.SysMenu" >
    update sys_menu
    <set >
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="treeCode != null" >
        tree_code = #{treeCode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=BIT},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null" >
        created_time = #{createdTime,jdbcType=BIGINT},
      </if>
      <if test="modifiedTime != null" >
        modified_time = #{modifiedTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.clj.reptilehouse.system.entity.SysMenu" >
    update sys_menu
    set `name` = #{name,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=BIGINT},
      tree_code = #{treeCode,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=BIT},
      icon = #{icon,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=BIGINT},
      modified_time = #{modifiedTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <!-- my start -->
  <select id="list" parameterType="string" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from sys_menu
		<where>${_parameter}</where>
  </select>
  <delete id="deleteBy" parameterType="string">
		delete from sys_menu
		<where>${_parameter}</where>
  </delete>
  <update id="updateCodeBy" parameterType="string">
  		update sys_menu set tree_code ='*' 
  		<where>${_parameter}</where>
  </update>
  <select id="selectMaxCode" parameterType="string" resultType="java.lang.String">
		select max(tree_code) from sys_menu
		<where>${_parameter}</where>
  </select>
  <select id="listLeftMenuByUid" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from sys_menu 
		<where>
			`status`=1 and parent_id=-1 
			and id in ( select vum.menu_id from view_user_menu vum where vum.user_id=#{userId} ) 
			order by tree_code
		</where> 
  </select>
  <select id="listUserMenu" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from sys_menu 
		<where>
			`status`=1 
			<if test="treeCode != null">
	        	and tree_code like #{treeCode}
	        </if>
			and id in ( select vum.menu_id from view_user_menu vum where vum.user_id=#{userId} ) 
			order by tree_code
		</where> 
  </select>
  <select id="listUserMenuNI" resultMap="BaseResultMap">
		select <include refid="Base_Column_List"/> from sys_menu 
		<where>
			`status`=1 
			<if test="treeCode != null">
	        	and tree_code like '${treeCode}%' 
	        	and tree_code not like #{treeCode} 
	        </if>
			and id in ( select vum.menu_id from view_user_menu vum where vum.user_id=#{userId} ) 
			order by tree_code
		</where> 
  </select>
</mapper>